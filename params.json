{"name":"The Wealthy Laughing Duck Project","tagline":"Manage your home finances with an easy web app.","body":"![Wealthy Laughing Duck Logo](img/logo.png \"Wealthy Laughing Duck Logo\")\r\n\r\n# Introduction\r\n\r\nWealthy Laughing Duck is a simple logic model that can be adapted by various\r\napplications and platforms. It's supposed to be a **personal finance managing\r\nsystem**. All duck components are just implementations of this model, e.g. web\r\ninterface implemented with JavaScript, Java Thrift server / PHP Thrift client,\r\npython RESTful API (consumed by JavaScript interface) and so on.\r\n\r\nMost of duck components are in early development phase so far, but the aim is\r\nto make them mature, stable systems that would rely on different technologies\r\nused. Developers would clone and easily deploy github repositories and examine\r\nthe implementation to learn the technologies.\r\n\r\n# Contribution\r\n\r\nThis is more than welcome :) The more contributions and group members there\r\nare, the more the duck project will improve. If you wish to make some commits\r\nto existing repositories - or even create your own repository that illustrates\r\na technology that's not present in the duck project yet - just contact the\r\n@wealthy-laughing-duck.\r\n\r\n# List of duck components\r\n\r\n * [wealthy laughing duck (original project)](https://github.com/wealthy-laughing-duck/wealthy-laughing-duck):\r\n\r\n    * Java Thrift server\r\n    * PHP Thrift client\r\n    * JavaScript interface\r\n\r\n * [Backbone/Marionette interface](https://github.com/wealthy-laughing-duck/duck-interface)\r\n\r\n * [Python/Django API](https://github.com/wealthy-laughing-duck/duck-api-rip)\r\n\r\n# Standards\r\n\r\nAs each duck component relies on the same logic model, different systems should\r\nbe able to access the same resources, such as: databases, files, file formats,\r\napi designs, etc. To ease components communication with each other, some\r\nstandards were introduced:\r\n\r\n## Database\r\n\r\n * type: `mysql`\r\n * host: `localhost`\r\n * port: `3306`\r\n * database user: `duck_user`\r\n * database name: `duck_database`\r\n * password: `wXyqhWzlF0uO20j8`\r\n\r\nDuck components will connect the database according to above parameters by\r\ndefault.\r\n\r\n## Other standards (to be added)\r\n\r\nThose will include: database schema, thrift definitions, JSON api design, file\r\nformats.\r\n","google":"UA-43456870-1","note":"Don't delete this file! It's used internally to help with page regeneration."}